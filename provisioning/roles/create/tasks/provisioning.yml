- name: Criando o Security Group
  local_action:
    module: ec2_group
    name: "{{ security_group }}"
    description: Security Group Giropops
    region: "{{ region }}"
    profile: "{{ profile }}"
    rules:
    - proto: tcp
      ports:
        - 22
      rule_desc: SSH
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      ports:
        - 6443
        - 2379-2380
        - 10250-10252
        - 10255
        - 30000-32767
      rule_desc: K8s Ports
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      ports:
        - 6783
      rule_desc: WeaveNet
      cidr_ip: 0.0.0.0/0
    - proto: udp
      ports:
        - 6783-6784
      rule_desc: WeaveNet
      cidr_ip: 0.0.0.0/0
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2
  local_action: ec2
    group={{ security_group }}
    instance_type={{ instance_type }}
    image={{ image }}
    profile="{{ profile }}"
    wait=true
    region={{ region }}
    keypair={{ keypair }}
    count={{ count }}
  register: ec2

- debug: msg={{ ec2.instances[0].private_ip }}

- name: Adicionando a instancia ao inventario temp
  add_host: name={{ item.public_ip }} groups=giropops-new
  with_items: "{{ ec2.instances }}"

- name: Adicionando IP publico da instancia criada no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.public_ip }}
    insertafter="ip-publico" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: Adicionando o ip privado da instancia criada no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.private_ip }}
    insertafter="ip-privado" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: Adicionando o ip do host Master
  local_action: lineinfile
    dest="./hosts2"
    regexp='K8S_MASTER_NODE_IP'
    line="K8S_MASTER_NODE_IP={{ item.private_ip }}"  
  with_items: "{{ ec2.instances }}"

- name: Esperando o SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.instances }}"

- name: Adicionando um nome tag na instancia
  local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ profile }} state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: Finardi-Cloud-k8s

- name: Adicionando a maquina criada no known_hosts
  shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
  with_items: "{{ ec2.instances }}"
